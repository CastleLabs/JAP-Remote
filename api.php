<?php
// api.php

// Enable error reporting and display errors for debugging
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Function to send an API request using cURL
function sendApiRequest($url, $payload) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $payload);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: text/plain',
        'User-Agent: JustOS API Tester'
    ]);

    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);

    return [
        'response' => $response,
        'httpCode' => $httpCode,
        'error' => $error
    ];
}

// Function to get the payload based on the action
function getPayload($action) {
    $payloads = [
        'power' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,145,48,145,48,145,48,48,48,48,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,48,48,48,48,145,48,145,48,145,48,2146" | ./fluxhandlerV2.sh',
        'channel_up' => 'echo "sendir,1:1,1,58000,1,1,193,192,49,144,49,144,49,48,49,144,49,144,49,144,49,48,49,144,49,144,49,144,49,48,49,48,49,48,49,144,49,48,49,48,49,48,49,144,49,48,49,48,49,48,49,144,49,1851" | ./fluxhandlerV2.sh',
        'channel_down' => 'echo "0000 0048 0000 0018 00c1 00c0 0031 0090 0031 0090 0031 0030 0031 0090 0031 0090 0031 0030 0031 0090 0031 0090 0031 0090 0031 0090 0031 0030 0031 0030 0031 0030 0031 0090 0031 0030 0031 0030 0031 0090 0031 0030 0031 0030 0031 0030 0031 0030 0031 0090 0031 073b" | ./fluxhandlerV2.sh',
        'guide' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,145,48,145,48,48,48,48,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,48,48,48,48,145,48,145,48,145,48,2146" | ./fluxhandlerV2.sh',
        'select' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,48,48,145,48,145,48,48,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,145,48,48,48,48,48,145,48,145,48,2146" | ./fluxhandlerV2.sh',
        'up' => 'echo "0000 0048 0000 0018 00c0 00c0 0030 0091 0030 0091 0030 0030 0030 0091 0030 0091 0030 0030 0030 0091 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0091 0030 0030 0030 0030 0030 0091 0030 0030 0030 0091 0030 0091 0030 0091 0030 0091 0030 0864" | ./fluxhandlerV2.sh',
        'down' => 'echo "0000 0048 0000 0018 00c0 00c0 0030 0091 0030 0091 0030 0030 0030 0091 0030 0091 0030 0091 0030 0091 0030 0030 0030 0091 0030 0030 0030 0030 0030 0030 0030 0030 0030 0091 0030 0030 0030 0030 0030 0030 0030 0030 0030 0091 0030 0030 0030 0091 0030 0091 0030 0862" | ./fluxhandlerV2.sh',
        'left' => 'echo "0000 0048 0000 0018 00c0 00c0 0030 0091 0030 0091 0030 0030 0030 0091 0030 0091 0030 0091 0030 0091 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0091 0030 0030 0030 0030 0030 0030 0030 0030 0030 0091 0030 0091 0030 0091 0030 0091 0030 0864" | ./fluxhandlerV2.sh',
        'right' => 'echo "0000 0048 0000 0018 00c0 00c0 0030 0091 0030 0091 0030 0030 0030 0091 0030 0091 0030 0030 0030 0030 0030 0091 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0030 0091 0030 0030 0030 0030 0030 0091 0030 0091 0030 0030 0030 0091 0030 0091 0030 0091 0030 0864" | ./fluxhandlerV2.sh',
        '0' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,145,48,48,48,48,48,145,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,145,48,48,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '1' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,145,48,145,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '2' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,145,48,145,48,48,48,145,48,2147" | ./fluxhandlerV2.sh',
        '3' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,145,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,48,48,145,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '4' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,145,48,145,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,48,48,145,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '5' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,48,48,145,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,145,48,48,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '6' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,145,48,48,48,145,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '7' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,145,48,145,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,48,48,48,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '8' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,145,48,145,48,145,48,48,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,48,48,48,48,48,48,145,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
        '9' => 'echo "sendir,1:1,1,58000,1,1,192,192,48,145,48,145,48,48,48,145,48,145,48,48,48,48,48,48,48,145,48,145,48,48,48,48,48,48,48,145,48,48,48,48,48,145,48,145,48,145,48,48,48,48,48,145,48,2146" | ./fluxhandlerV2.sh',
    ];

    return $payloads[$action] ?? '';
}

// Initialize an empty error message variable
$errorMessage = '';

// Check if the request method is POST
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $deviceUrl = rtrim($_POST['device_url'], '/');
    $action = $_POST['action'];
    $url = $deviceUrl . "/cgi-bin/api/command/cli";
    $payload = getPayload($action);
    
    if ($payload) {
        $result = sendApiRequest($url, $payload);
        if ($result['error'] || $result['httpCode'] >= 400) {
            $errorMessage = "Error: " . ($result['error'] ?: "HTTP Code " . $result['httpCode']);
        }
    } else {
        $errorMessage = "Invalid action: " . htmlspecialchars($action);
    }

    // Return the result as JSON
    header('Content-Type: application/json');
    echo json_encode(['error' => $errorMessage]);
    exit;
}
?>